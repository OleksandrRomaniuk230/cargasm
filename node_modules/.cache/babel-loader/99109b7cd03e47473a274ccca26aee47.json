{"ast":null,"code":"import _typeof from \"/home/its/project/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _defineProperty from \"/home/its/project/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _props;\n\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: (_props = {\n    value: {\n      type: [Object, String],\n      default: function _default() {\n        return {};\n      }\n    },\n    placeholder: {\n      type: String,\n      default: \"\"\n    },\n    label: {\n      type: String,\n      default: \"\"\n    },\n    inputName: {\n      type: String,\n      default: \"\"\n    }\n  }, _defineProperty(_props, \"value\", {\n    type: [Number, String, Array, Boolean, Object],\n    default: null\n  }), _defineProperty(_props, \"labelName\", {\n    type: String,\n    default: \"name\"\n  }), _defineProperty(_props, \"options\", {\n    type: [Array, Object],\n    required: false,\n    default: function _default() {\n      return [];\n    }\n  }), _props),\n  data: function data() {\n    return {\n      selected: \"\"\n    };\n  },\n  methods: {\n    getOptionLabel: function getOptionLabel(option) {\n      if (_typeof(option) === \"object\") {\n        if (!option.hasOwnProperty(this.labelName)) {\n          return console.warn(\"[vue-select warn]: Label key \\\"option.\".concat(this.labelName, \"\\\" does not\") + \" exist in options object \".concat(JSON.stringify(option), \".\\n\") + \"http://sagalbot.github.io/vue-select/#ex-labels\");\n        }\n\n        return option[this.labelName];\n      }\n\n      return option;\n    },\n    changeValue: function changeValue(e) {\n      if (typeof e !== \"string\") {\n        if (e.key) {\n          this.$emit(\"input\", e.key);\n        } else {\n          this.$emit(\"input\", e.value);\n        }\n      }\n    }\n  }\n  /*   watch: {\n    value: {\n      handler(bef) {\n       if(!this.selected){\n         this.selected=bef\n       }\n      },\n    },\n  }, */\n\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAaA;EACAA;IACAC;MACAC,sBADA;MAEAC;QACA;MACA;IAJA,CADA;IAOAC;MACAF,YADA;MAEAC;IAFA,CAPA;IAWAE;MACAH,YADA;MAEAC;IAFA,CAXA;IAeAG;MACAJ,YADA;MAEAC;IAFA;EAfA,oCAmBA;IACAD,8CADA;IAEAC;EAFA,CAnBA,wCAwBA;IACAD,YADA;IAEAC;EAFA,CAxBA,sCA6BA;IACAD,qBADA;IAEAK,eAFA;IAGAJ,OAHA,sBAGA;MACA;IACA;EALA,CA7BA,UADA;EAuCAK,IAvCA,kBAuCA;IACA;MACAC;IADA;EAGA,CA3CA;EA6CAC;IACAC,cADA,0BACAC,MADA,EACA;MACA;QACA;UACA,oBACA,oHACAC,sBADA,WAEA,iDAHA;QAKA;;QACA;MACA;;MACA;IACA,CAbA;IAcAC,WAdA,uBAcAC,CAdA,EAcA;MACA;QACA;UACA;QACA,CAFA,MAEA;UACA;QACA;MACA;IACA;EAtBA;EAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA7EA","names":["props","value","type","default","placeholder","label","inputName","required","data","selected","methods","getOptionLabel","option","JSON","changeValue","e"],"sourceRoot":"src/components/fields","sources":["AppSelect.vue"],"sourcesContent":["<template>\n  <div>\n    <vueSelect\n      @input=\"changeValue\"\n      :options=\"options\"\n      :label=\"labelName\"\n      :placeholder=\"placeholder\"\n      :value=\"value\"\n    >\n    </vueSelect>\n  </div>\n</template>\n<script>\nexport default {\n  props: {\n    value: {\n      type: [Object, String],\n      default: () => {\n        return {};\n      },\n    },\n    placeholder: {\n      type: String,\n      default: \"\",\n    },\n    label: {\n      type: String,\n      default: \"\",\n    },\n    inputName: {\n      type: String,\n      default: \"\",\n    },\n    value: {\n      type: [Number, String, Array, Boolean, Object],\n      default: null,\n    },\n\n    labelName: {\n      type: String,\n      default: \"name\",\n    },\n\n    options: {\n      type: [Array, Object],\n      required: false,\n      default() {\n        return [];\n      },\n    },\n  },\n\n  data() {\n    return {\n      selected: \"\",\n    };\n  },\n\n  methods: {\n    getOptionLabel(option) {\n      if (typeof option === \"object\") {\n        if (!option.hasOwnProperty(this.labelName)) {\n          return console.warn(\n            `[vue-select warn]: Label key \"option.${this.labelName}\" does not` +\n              ` exist in options object ${JSON.stringify(option)}.\\n` +\n              \"http://sagalbot.github.io/vue-select/#ex-labels\"\n          );\n        }\n        return option[this.labelName];\n      }\n      return option;\n    },\n    changeValue(e) {\n      if (typeof e !== \"string\") {\n        if (e.key) {\n          this.$emit(\"input\", e.key);\n        } else {\n          this.$emit(\"input\", e.value);\n        }\n      }\n    },\n  },\n  /*   watch: {\n    value: {\n      handler(bef) {\n       if(!this.selected){\n         this.selected=bef\n       }\n      },\n    },\n  }, */\n};\n</script>"]},"metadata":{},"sourceType":"module"}