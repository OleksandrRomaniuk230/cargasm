{"ast":null,"code":"import _typeof from \"/home/its/project/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _regeneratorRuntime from \"/home/its/project/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/its/project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport _ from \"lodash\";\nexport default {\n  props: {\n    placeholder: {\n      type: String,\n      default: \"\"\n    },\n    labelName: {\n      type: String,\n      default: \"label\"\n    },\n    options: {\n      type: [Array, Object],\n      required: false,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      selected: \"\",\n      items: this.options\n    };\n  },\n  methods: {\n    changeValue: function changeValue() {\n      var _this = this;\n\n      this.$emit(\"input\", this.selected);\n      this.$emit(\"change\", this.items.find(function (item) {\n        return item[_this.reduseKey] === _this.selected;\n      }));\n    },\n    getOption: function getOption(e) {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var payload, _yield$_this2$$store$, data;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this2.load = true;\n\n                if (e) {\n                  payload = e;\n                }\n\n                _context.prev = 2;\n                _context.next = 5;\n                return _this2.$store.dispatch(_this2.action, payload);\n\n              case 5:\n                _yield$_this2$$store$ = _context.sent;\n                data = _yield$_this2$$store$.data;\n                _this2.items = data;\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](2);\n                console.log(_context.t0);\n\n              case 13:\n                _context.prev = 13;\n                _this2.load = false;\n                return _context.finish(13);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 10, 13, 16]]);\n      }))();\n    },\n    onSearch: function onSearch(search, loading) {\n      if (this.action !== \"\" && this.autocomplite) {\n        loading(true);\n        this.search(loading, search, this);\n      }\n    },\n    search: _.debounce( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(loading, search, vm) {\n        var payload, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                vm.$emit(\"search:val\", search);\n                payload = {\n                  q: search\n                };\n\n                if (vm.filters) {\n                  payload = {\n                    q: search,\n                    f: vm.filters\n                  };\n                }\n\n                _context2.prev = 3;\n                _context2.next = 6;\n                return vm.$store.dispatch(vm.action, {\n                  q: search,\n                  parent_id: vm.payload ? vm.payload.parent_id : \"\"\n                });\n\n              case 6:\n                response = _context2.sent;\n                vm.items = response.data;\n\n                if (search) {\n                  vm.noOptionsMessage = \"ничего не найдено\";\n                } else {\n                  vm.noOptionsMessage = \"Для выбора параметров введите несколько букв...\";\n                }\n\n                _context2.next = 14;\n                break;\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](3);\n                console.log(_context2.t0);\n\n              case 14:\n                _context2.prev = 14;\n                loading(false);\n                return _context2.finish(14);\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[3, 11, 14, 17]]);\n      }));\n\n      return function (_x, _x2, _x3) {\n        return _ref.apply(this, arguments);\n      };\n    }(), 350),\n    getOptionLabel: function getOptionLabel(option) {\n      if (_typeof(option) === \"object\") {\n        if (!option.hasOwnProperty(this.labelName)) {\n          return console.warn(\"[vue-select warn]: Label key \\\"option.\".concat(this.labelName, \"\\\" does not\") + \" exist in options object \".concat(JSON.stringify(option), \".\\n\") + \"http://sagalbot.github.io/vue-select/#ex-labels\");\n        }\n\n        return option[this.labelName];\n      }\n\n      return option;\n    }\n  },\n  watch: {\n    options: {\n      handler: function handler(bef) {\n        if (!this.searchable) {\n          this.items = bef;\n        }\n      },\n      deep: true\n    },\n    value: {\n      handler: function handler(bef) {\n        this.selected = bef;\n        this.isActive = true;\n      },\n      deep: true\n    },\n    selected: {\n      handler: function handler(bef) {\n        this.changeValue();\n      }\n    },\n    payload: {\n      handler: function handler(bef) {\n        this.getOption(bef);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;AAcA;AACA;EACAA;IACAC;MACAC,YADA;MAEAC;IAFA,CADA;IAKAC;MACAF,YADA;MAEAC;IAFA,CALA;IAUAE;MACAH,qBADA;MAEAI,eAFA;MAGAH,OAHA,sBAGA;QACA;MACA;IALA;EAVA,CADA;EAoBAI,IApBA,kBAoBA;IACA;MACAC,YADA;MAEAC;IAFA;EAIA,CAzBA;EA0BAC;IACAC,WADA,yBACA;MAAA;;MACA;MACA,WACA,QADA,EAEA;QAAA;MAAA,EAFA;IAIA,CAPA;IAQAC,SARA,qBAQAC,CARA,EAQA;MAAA;;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBACA;;gBAEA;kBACAC;gBACA;;gBALA;gBAAA;gBAAA,OAOA,8CAPA;;cAAA;gBAAA;gBAOAP,IAPA,yBAOAA,IAPA;gBAQA;gBARA;gBAAA;;cAAA;gBAAA;gBAAA;gBAUAQ;;cAVA;gBAAA;gBAYA;gBAZA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAcA,CAtBA;IAuBAC,QAvBA,oBAuBAC,MAvBA,EAuBAC,OAvBA,EAuBA;MACA;QACAA;QACA;MACA;IACA,CA5BA;IA6BAD;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACAE;gBACAL,OAFA,GAEA;kBAAAM;gBAAA,CAFA;;gBAGA;kBACAN;oBAAAM;oBAAAC;kBAAA;gBACA;;gBALA;gBAAA;gBAAA,OAOAF;kBACAC,SADA;kBAEAE;gBAFA,EAPA;;cAAA;gBAOAC,QAPA;gBAWAJ;;gBACA;kBACAA;gBACA,CAFA,MAEA;kBACAA,sBACA,iDADA;gBAEA;;gBAjBA;gBAAA;;cAAA;gBAAA;gBAAA;gBAmBAJ;;cAnBA;gBAAA;gBAqBAG;gBArBA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;IAAA,KAuBA,GAvBA,CA7BA;IAqDAM,cArDA,0BAqDAC,MArDA,EAqDA;MACA;QACA;UACA,oBACA,oHACAC,sBADA,WAEA,iDAHA;QAKA;;QACA;MACA;;MACA;IACA;EAjEA,CA1BA;EA6FAC;IACAtB;MACAuB,OADA,mBACAC,GADA,EACA;QACA;UACA;QACA;MACA,CALA;MAMAC;IANA,CADA;IASAC;MACAH,OADA,mBACAC,GADA,EACA;QACA;QACA;MACA,CAJA;MAKAC;IALA,CATA;IAgBAtB;MACAoB,OADA,mBACAC,GADA,EACA;QACA;MACA;IAHA,CAhBA;IAqBAf;MACAc,OADA,mBACAC,GADA,EACA;QACA;MACA;IAHA;EArBA;AA7FA","names":["props","placeholder","type","default","labelName","options","required","data","selected","items","methods","changeValue","getOption","e","payload","console","onSearch","search","loading","vm","q","f","parent_id","response","getOptionLabel","option","JSON","watch","handler","bef","deep","value"],"sourceRoot":"src/components/fields","sources":["AppSelect.vue"],"sourcesContent":["<template>\n  <div>\n    <vueSelect\n      v-model=\"selected\"\n      class=\"vue-select1 default__select\"\n      name=\"select1\"\n      :placeholder=\"placeholder\"\n      :options=\"items\"\n      @input=\"$emit('input', selected)\"\n    >\n    </vueSelect>\n  </div>\n</template>\n<script>\nimport _ from \"lodash\";\nexport default {\n  props: {\n    placeholder: {\n      type: String,\n      default: \"\",\n    },\n    labelName: {\n      type: String,\n      default: \"label\",\n    },\n\n    options: {\n      type: [Array, Object],\n      required: false,\n      default() {\n        return [];\n      },\n    },\n  },\n\n  data() {\n    return {\n      selected: \"\",\n      items: this.options,\n    };\n  },\n  methods: {\n    changeValue() {\n      this.$emit(\"input\", this.selected);\n      this.$emit(\n        \"change\",\n        this.items.find((item) => item[this.reduseKey] === this.selected)\n      );\n    },\n    async getOption(e) {\n      this.load = true;\n      let payload;\n      if (e) {\n        payload = e;\n      }\n      try {\n        let { data } = await this.$store.dispatch(this.action, payload);\n        this.items = data;\n      } catch (e) {\n        console.log(e);\n      } finally {\n        this.load = false;\n      }\n    },\n    onSearch(search, loading) {\n      if (this.action !== \"\" && this.autocomplite) {\n        loading(true);\n        this.search(loading, search, this);\n      }\n    },\n    search: _.debounce(async (loading, search, vm) => {\n      vm.$emit(\"search:val\", search);\n      let payload = { q: search };\n      if (vm.filters) {\n        payload = { q: search, f: vm.filters };\n      }\n      try {\n        let response = await vm.$store.dispatch(vm.action, {\n          q: search,\n          parent_id: vm.payload ? vm.payload.parent_id : \"\",\n        });\n        vm.items = response.data;\n        if (search) {\n          vm.noOptionsMessage = \"ничего не найдено\";\n        } else {\n          vm.noOptionsMessage =\n            \"Для выбора параметров введите несколько букв...\";\n        }\n      } catch (e) {\n        console.log(e);\n      } finally {\n        loading(false);\n      }\n    }, 350),\n    getOptionLabel(option) {\n      if (typeof option === \"object\") {\n        if (!option.hasOwnProperty(this.labelName)) {\n          return console.warn(\n            `[vue-select warn]: Label key \"option.${this.labelName}\" does not` +\n              ` exist in options object ${JSON.stringify(option)}.\\n` +\n              \"http://sagalbot.github.io/vue-select/#ex-labels\"\n          );\n        }\n        return option[this.labelName];\n      }\n      return option;\n    },\n  },\n  watch: {\n    options: {\n      handler(bef) {\n        if (!this.searchable) {\n          this.items = bef;\n        }\n      },\n      deep: true,\n    },\n    value: {\n      handler(bef) {\n        this.selected = bef;\n        this.isActive = true;\n      },\n      deep: true,\n    },\n    selected: {\n      handler(bef) {\n        this.changeValue();\n      },\n    },\n    payload: {\n      handler(bef) {\n        this.getOption(bef);\n      },\n    },\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}