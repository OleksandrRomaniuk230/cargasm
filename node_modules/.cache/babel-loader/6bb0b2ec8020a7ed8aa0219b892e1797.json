{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { serialize } from \"object-to-formdata\";\nexport default {\n  props: {\n    clearphoto: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      preview: null,\n      image: null\n    };\n  },\n  methods: {\n    uploadFile: function uploadFile(e) {\n      var object = {\n        /**\n         * key-value mapping\n         * values can be primitives or objects\n         */\n      };\n      var options = {\n        /**\n         * include array indices in FormData keys\n         * defaults to false\n         */\n        indices: false,\n\n        /**\n         * treat null values like undefined values and ignore them\n         * defaults to false\n         */\n        nullsAsUndefineds: false,\n\n        /**\n         * convert true or false to 1 or 0 respectively\n         * defaults to false\n         */\n        booleansAsIntegers: false,\n\n        /**\n         * store arrays even if they're empty\n         * defaults to false\n         */\n        allowEmptyArrays: false,\n\n        /**\n         * don't include array notation in FormData keys for Files in arrays\n         * defaults to false\n         */\n        noFilesWithArrayNotation: false,\n\n        /**\n         * use dots instead of brackets for object notation in FormData keys\n         * defaults to false\n         */\n        dotsForObjectNotation: false\n      };\n      var formData = serialize(object, options // optional\n      );\n      console.log(formData);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;EACAA;IACAC;MACAC,aADA;MAEAC;IAFA;EADA,CADA;EAOAC,IAPA,kBAOA;IACA;MACAC,aADA;MAEAC;IAFA;EAIA,CAZA;EAaAC;IACAC,UADA,sBACAC,CADA,EACA;MACA;QACA;AACA;AACA;AACA;MAJA;MAOA;QACA;AACA;AACA;AACA;QACAC,cALA;;QAOA;AACA;AACA;AACA;QACAC,wBAXA;;QAaA;AACA;AACA;AACA;QACAC,yBAjBA;;QAmBA;AACA;AACA;AACA;QACAC,uBAvBA;;QAyBA;AACA;AACA;AACA;QACAC,+BA7BA;;QA+BA;AACA;AACA;AACA;QACAC;MAnCA;MAsCA,yBACAC,MADA,EAEAC,OAFA,CAEA;MAFA;MAKAC;IACA;EArDA;AAbA","names":["props","clearphoto","type","default","data","preview","image","methods","uploadFile","e","indices","nullsAsUndefineds","booleansAsIntegers","allowEmptyArrays","noFilesWithArrayNotation","dotsForObjectNotation","object","options","console"],"sourceRoot":"src/components/fields","sources":["AppAddPhoto.vue"],"sourcesContent":["<template>\n  <div class=\"photo-add\">\n    <img v-if=\"preview && clearphoto\" :src=\"preview\" class=\"photo-add__img\" />\n    <label v-else class=\"photo-add__label\">\n      <svg\n        width=\"80\"\n        height=\"80\"\n        viewBox=\"0 0 80 80\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M73.334 53.334V13.334C73.329 11.5673 72.625 9.87447 71.3757 8.62525C70.1265 7.37603 68.4336 6.67201 66.667 6.66699H26.667C24.9003 6.67201 23.2075 7.37603 21.9583 8.62525C20.709 9.87447 20.005 11.5673 20 13.334V53.334C20.0053 55.1005 20.7094 56.7931 21.9586 58.0421C23.2078 59.2911 24.9005 59.995 26.667 60H66.667C68.4335 59.995 70.1262 59.2911 71.3754 58.0421C72.6246 56.7931 73.3287 55.1005 73.334 53.334ZM36.667 40L43.434 49.033L53.334 36.667L66.667 53.334H26.667L36.667 40ZM6.66699 20V66.667C6.67201 68.4336 7.37603 70.1265 8.62525 71.3757C9.87447 72.625 11.5673 73.329 13.334 73.334H60V66.667H13.334V20H6.66699Z\"\n          fill=\"#D7DCDE\"\n        />\n      </svg>\n      <button>+ Добавить фото</button></label\n    >\n    <input\n      @change=\"uploadFile\"\n      type=\"file\"\n      ref=\"file\"\n      class=\"photo-add__file\"\n      name=\"file\"\n    />\n  </div>\n</template>\n<script>\nimport { serialize } from \"object-to-formdata\";\nexport default {\n  props: {\n    clearphoto: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  data() {\n    return {\n      preview: null,\n      image: null,\n    };\n  },\n  methods: {\n    uploadFile(e) {\n     const object = {\n  /**\n   * key-value mapping\n   * values can be primitives or objects\n   */\n};\n\nconst options = {\n  /**\n   * include array indices in FormData keys\n   * defaults to false\n   */\n  indices: false,\n\n  /**\n   * treat null values like undefined values and ignore them\n   * defaults to false\n   */\n  nullsAsUndefineds: false,\n\n  /**\n   * convert true or false to 1 or 0 respectively\n   * defaults to false\n   */\n  booleansAsIntegers: false,\n\n  /**\n   * store arrays even if they're empty\n   * defaults to false\n   */\n  allowEmptyArrays: false,\n\n  /**\n   * don't include array notation in FormData keys for Files in arrays\n   * defaults to false\n   */\n  noFilesWithArrayNotation: false,\n\n  /**\n   * use dots instead of brackets for object notation in FormData keys\n   * defaults to false\n   */\n  dotsForObjectNotation: false,\n};\n\nconst formData = serialize(\n  object,\n  options, // optional\n);\n\nconsole.log(formData);\n    },\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}