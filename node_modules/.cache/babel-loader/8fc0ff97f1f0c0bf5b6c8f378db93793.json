{"ast":null,"code":"import _typeof from \"/home/its/project/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: {\n    value: {\n      type: [Object, String],\n      default: function _default() {\n        return {};\n      }\n    },\n    placeholder: {\n      type: String,\n      default: \"\"\n    },\n    label: {\n      type: String,\n      default: \"\"\n    },\n    inputName: {\n      type: String,\n      default: \"\"\n    },\n    labelName: {\n      type: String,\n      default: \"name\"\n    },\n    options: {\n      type: [Array, Object],\n      required: false,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      selected: \"\",\n      items: this.options\n    };\n  },\n  methods: {\n    getOptionLabel: function getOptionLabel(option) {\n      if (_typeof(option) === \"object\") {\n        if (!option.hasOwnProperty(this.labelName)) {\n          return console.warn(\"[vue-select warn]: Label key \\\"option.\".concat(this.labelName, \"\\\" does not\") + \" exist in options object \".concat(JSON.stringify(option), \".\\n\") + \"http://sagalbot.github.io/vue-select/#ex-labels\");\n        }\n\n        return option[this.labelName];\n      }\n\n      return option;\n    },\n    changeSelect: function changeSelect(e) {\n      console.log(e);\n    }\n  },\n  mounted: function mounted() {\n    this.$refs.select.open = true;\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;AAeA;EACAA;IACAC;MACAC,sBADA;MAEAC;QACA;MACA;IAJA,CADA;IAQAC;MACAF,YADA;MAEAC;IAFA,CARA;IAYAE;MACAH,YADA;MAEAC;IAFA,CAZA;IAgBAG;MACAJ,YADA;MAEAC;IAFA,CAhBA;IAoBAI;MACAL,YADA;MAEAC;IAFA,CApBA;IAyBAK;MACAN,qBADA;MAEAO,eAFA;MAGAN,OAHA,sBAGA;QACA;MACA;IALA;EAzBA,CADA;EAmCAO,IAnCA,kBAmCA;IACA;MACAC,YADA;MAGAC;IAHA;EAKA,CAzCA;EA0CAC;IACAC,cADA,0BACAC,MADA,EACA;MACA;QACA;UACA,oBACA,oHACAC,sBADA,WAEA,iDAHA;QAKA;;QACA;MACA;;MACA;IACA,CAbA;IAcAC,YAdA,wBAcAC,CAdA,EAcA;MACAC;IACA;EAhBA,CA1CA;EA4DAC,OA5DA,qBA4DA;IACA;EACA;AA9DA","names":["props","value","type","default","placeholder","label","inputName","labelName","options","required","data","selected","items","methods","getOptionLabel","option","JSON","changeSelect","e","console","mounted"],"sourceRoot":"src/components/fields","sources":["AppSelect.vue"],"sourcesContent":["<template>\n  <div>\n    <vueSelect\n      :value=\"value\"\n    @input=\"$emit('input', $event)\"\n    :reduce=\"data => data.code\"\n    :options=\"options\"\n    label=\"name\"\n    class=\"select-component\"\n      ref=\"select\"\n    >\n    </vueSelect>\n  </div>\n</template>\n<script>\nexport default {\n  props: {\n    value: {\n      type:[Object,String], \n      default: () => {\n        return {}\n      }\n\n    },\n    placeholder: {\n      type: String,\n      default: \"\",\n    },\n    label: {\n      type: String,\n      default: \"\",\n    },\n    inputName: {\n      type: String,\n      default: \"\",\n    },\n    labelName: {\n      type: String,\n      default: \"name\",\n    },\n\n    options: {\n      type: [Array, Object],\n      required: false,\n      default() {\n        return [];\n      },\n    },\n  },\n\n  data() {\n    return {\n      selected: \"\",\n     \n      items: this.options,\n    };\n  },\n  methods: {\n    getOptionLabel(option) {\n      if (typeof option === \"object\") {\n        if (!option.hasOwnProperty(this.labelName)) {\n          return console.warn(\n            `[vue-select warn]: Label key \"option.${this.labelName}\" does not` +\n              ` exist in options object ${JSON.stringify(option)}.\\n` +\n              \"http://sagalbot.github.io/vue-select/#ex-labels\"\n          );\n        }\n        return option[this.labelName];\n      }\n      return option;\n    },\n    changeSelect(e){\n      console.log(e)\n    }\n  },\n  mounted() {\n   this.$refs.select.open = true;\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}