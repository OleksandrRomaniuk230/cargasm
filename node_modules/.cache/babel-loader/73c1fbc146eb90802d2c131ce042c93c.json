{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: {\n    placeholder: {\n      type: String,\n      default: \"\"\n    },\n    label: {\n      type: String,\n      default: \"\"\n    }\n  },\n  data: function data() {\n    return {\n      options: [\"00:00\", \"01:00\", \"02:00\", \"03:00\", \"04:00\", \"05:00\", \"06:00\", \"07:00\", \"08:00\", \"09:00\", \"10:00\", \"11:00\", \"12:00\"],\n      options1: [],\n      time: \"\",\n      focusTimepicker: false\n    };\n  },\n  methods: {\n    /*     open() {\n      if (this.options1.length === 2) {\n        this.options1.sort();\n        if(!this.options1[0].includes('c')){this.options1[0]= 'c  ' + this.options1[0]}\n        if(!this.options1[0].includes('-')){this.options1[1]= '  - ' + this.options1[1]}\n         let a = this.options.find((el) => el === this.options1[0]);\n        let b = this.options.find((el) => el === this.options1[1]);\n         for (\n          let index = this.options.indexOf(a);\n        index   < this.options.indexOf(b);\n          index++\n        ) {\n    //  this.options[index].target.style.backgroundColor = \"red\";\n    this.options[index]\n        }\n       } else if (this.options1.length > 2) {\n        for (let index = 0; index < 2; index++) {\n          this.options1.shift();\n        }\n      }\n      this.$refs.timeSelect.open = true;\n    }, */\n    openDropdown: function openDropdown() {},\n    changtOption: function changtOption() {}\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA;EACAA;IACAC;MACAC,YADA;MAEAC;IAFA,CADA;IAKAC;MACAF,YADA;MAEAC;IAFA;EALA,CADA;EAYAE,IAZA,kBAYA;IACA;MACAC,UACA,OADA,EAEA,OAFA,EAGA,OAHA,EAIA,OAJA,EAKA,OALA,EAMA,OANA,EAOA,OAPA,EAQA,OARA,EASA,OATA,EAUA,OAVA,EAWA,OAXA,EAYA,OAZA,EAaA,OAbA,CADA;MAgBAC,YAhBA;MAiBAC,QAjBA;MAkBAC;IAlBA;EAoBA,CAjCA;EAkCAC;IACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;IAIAC,YA1BA,0BA0BA,EA1BA;IA2BAC,YA3BA,0BA2BA;EA3BA;AAlCA","names":["props","placeholder","type","default","label","data","options","options1","time","focusTimepicker","methods","openDropdown","changtOption"],"sourceRoot":"src/components/fields","sources":["AppSelectTime.vue"],"sourcesContent":["<template>\n  <div class=\"timepicker__wrapper\" @click=\"openDropdown()\">\n    <div class=\"timepicker__input\">\n      <input\n        type=\"text\"\n        :placeholder=\"placeholder\"\n        v-model=\"time\"\n        @click=\"focusTimepicker = !focusTimepicker\"\n      />\n      <svg\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M14 20.765C12.0964 21.2012 10.1025 21.0064 8.31936 20.2099C6.53619 19.4135 5.06048 18.0586 4.11494 16.3498C3.1694 14.641 2.80534 12.671 3.07772 10.7372C3.35009 8.80331 4.24411 7.01051 5.62486 5.62936C7.0056 4.24821 8.79813 3.35366 10.7319 3.08071C12.6657 2.80777 14.6358 3.17124 16.3449 4.11628C18.0539 5.06131 19.4092 6.53662 20.2062 8.31955C21.0032 10.1025 21.1986 12.0963 20.763 14\"\n          stroke=\"#E12927\"\n          stroke-width=\"1.5\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          class=\"timepicker__icon\"\n          :class=\"{ active: focusTimepicker }\"\n        />\n        <path\n          d=\"M17.25 19.25H21.25\"\n          stroke=\"#E12927\"\n          stroke-width=\"1.5\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          class=\"timepicker__icon\"\n          :class=\"{ active: focusTimepicker }\"\n        />\n        <path\n          d=\"M19.25 21.25V17.25\"\n          stroke=\"#E12927\"\n          stroke-width=\"1.5\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          class=\"timepicker__icon\"\n          :class=\"{ active: focusTimepicker }\"\n        />\n        <path\n          d=\"M11.718 7.98499V12.636L15.374 14.865\"\n          stroke=\"#E12927\"\n          stroke-width=\"1.5\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          class=\"timepicker__icon\"\n          :class=\"{ active: focusTimepicker }\"\n        />\n      </svg>\n    </div>\n    <div class=\"timepicker__dropdown\"  :class=\"{ active: focusTimepicker }\">\n      <ul class=\"timepicker__options\">\n        <li\n          v-for=\"option in options\"\n          :key=\"option\"\n          class=\"timepicker__option\"\n         @click=\"\"\n        >\n          {{ option }}\n        </li>\n      </ul>\n    </div>\n </div>\n</template>\n<script>\nexport default {\n  props: {\n    placeholder: {\n      type: String,\n      default: \"\",\n    },\n    label: {\n      type: String,\n      default: \"\",\n    },\n  },\n\n  data() {\n    return {\n      options: [\n        \"00:00\",\n        \"01:00\",\n        \"02:00\",\n        \"03:00\",\n        \"04:00\",\n        \"05:00\",\n        \"06:00\",\n        \"07:00\",\n        \"08:00\",\n        \"09:00\",\n        \"10:00\",\n        \"11:00\",\n        \"12:00\",\n      ],\n      options1: [],\n      time: \"\",\n      focusTimepicker: false,\n    };\n  },\n  methods: {\n    /*     open() {\n      if (this.options1.length === 2) {\n        this.options1.sort();\n        if(!this.options1[0].includes('c')){this.options1[0]= 'c  ' + this.options1[0]}\n        if(!this.options1[0].includes('-')){this.options1[1]= '  - ' + this.options1[1]}\n\n        let a = this.options.find((el) => el === this.options1[0]);\n        let b = this.options.find((el) => el === this.options1[1]);\n\n        for (\n          let index = this.options.indexOf(a);\n        index   < this.options.indexOf(b);\n          index++\n        ) {\n   //  this.options[index].target.style.backgroundColor = \"red\";\n   this.options[index]\n        }\n\n      } else if (this.options1.length > 2) {\n        for (let index = 0; index < 2; index++) {\n          this.options1.shift();\n        }\n      }\n      this.$refs.timeSelect.open = true;\n    }, */\n    openDropdown() {},\n    changtOption(){} },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}