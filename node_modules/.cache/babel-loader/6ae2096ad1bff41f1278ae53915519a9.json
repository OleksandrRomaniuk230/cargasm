{"ast":null,"code":"import _typeof from \"/home/its/project/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _regeneratorRuntime from \"/home/its/project/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/its/project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport _ from \"lodash\";\nexport default {\n  props: {\n    placeholder: {\n      type: String,\n      default: \"\"\n    },\n    labelName: {\n      type: String,\n      default: \"label\"\n    },\n    label: {\n      type: String,\n      default: \"\"\n    },\n    reduce: {\n      type: Function,\n      default: function _default(option) {\n        return option;\n      }\n    },\n    options: {\n      type: [Array, Object],\n      required: false,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      selected: \"\",\n      items: this.options\n    };\n  },\n  methods: {\n    changeValue: function changeValue() {\n      var _this = this;\n\n      this.$emit(\"input\", this.selected);\n      this.$emit(\"change\", this.items.find(function (item) {\n        return item[_this.reduseKey] === _this.selected;\n      }));\n    },\n    getOption: function getOption(e) {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var payload, _yield$_this2$$store$, data;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this2.load = true;\n\n                if (e) {\n                  payload = e;\n                }\n\n                _context.prev = 2;\n                _context.next = 5;\n                return _this2.$store.dispatch(_this2.action, payload);\n\n              case 5:\n                _yield$_this2$$store$ = _context.sent;\n                data = _yield$_this2$$store$.data;\n                _this2.items = data;\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](2);\n                console.log(_context.t0);\n\n              case 13:\n                _context.prev = 13;\n                _this2.load = false;\n                return _context.finish(13);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 10, 13, 16]]);\n      }))();\n    },\n    getOptionLabel: function getOptionLabel(option) {\n      console.log(1);\n\n      if (_typeof(option) === \"object\") {\n        if (!option.hasOwnProperty(this.labelName)) {\n          return console.warn(\"[vue-select warn]: Label key \\\"option.\".concat(this.labelName, \"\\\" does not\") + \" exist in options object \".concat(JSON.stringify(option), \".\\n\") + \"http://sagalbot.github.io/vue-select/#ex-labels\");\n        }\n\n        return option[this.labelName];\n      }\n\n      return option;\n    }\n  },\n  watch: {\n    options: {\n      handler: function handler(bef) {\n        if (!this.searchable) {\n          this.items = bef;\n        }\n      },\n      deep: true\n    },\n    value: {\n      handler: function handler(bef) {\n        this.selected = bef;\n        this.isActive = true;\n      },\n      deep: true\n    },\n    selected: {\n      handler: function handler(bef) {\n        this.changeValue();\n      }\n    },\n    payload: {\n      handler: function handler(bef) {\n        this.getOption(bef);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;AAeA;AACA;EACAA;IACAC;MACAC,YADA;MAEAC;IAFA,CADA;IAKAC;MACAF,YADA;MAEAC;IAFA,CALA;IAUAE;MACAH,YADA;MAEAC;IAFA,CAVA;IAcAG;MACAJ,cADA;MAEAC;QAAA;MAAA;IAFA,CAdA;IAmBAI;MACAL,qBADA;MAEAM,eAFA;MAGAL,OAHA,sBAGA;QACA;MACA;IALA;EAnBA,CADA;EA6BAM,IA7BA,kBA6BA;IACA;MACAC,YADA;MAEAC;IAFA;EAIA,CAlCA;EAmCAC;IACAC,WADA,yBACA;MAAA;;MACA;MACA,WACA,QADA,EAEA;QAAA;MAAA,EAFA;IAIA,CAPA;IAQAC,SARA,qBAQAC,CARA,EAQA;MAAA;;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBACA;;gBAEA;kBACAC;gBACA;;gBALA;gBAAA;gBAAA,OAOA,8CAPA;;cAAA;gBAAA;gBAOAP,IAPA,yBAOAA,IAPA;gBAQA;gBARA;gBAAA;;cAAA;gBAAA;gBAAA;gBAUAQ;;cAVA;gBAAA;gBAYA;gBAZA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAcA,CAtBA;IAuBAC,cAvBA,0BAuBAC,MAvBA,EAuBA;MACAF;;MACA;QACA;UACA,oBACA,oHACAG,sBADA,WAEA,iDAHA;QAKA;;QACA;MACA;;MACA;IACA;EApCA,CAnCA;EAyEAC;IACAd;MACAe,OADA,mBACAC,GADA,EACA;QACA;UACA;QACA;MACA,CALA;MAMAC;IANA,CADA;IASAC;MACAH,OADA,mBACAC,GADA,EACA;QACA;QACA;MACA,CAJA;MAKAC;IALA,CATA;IAgBAd;MACAY,OADA,mBACAC,GADA,EACA;QACA;MACA;IAHA,CAhBA;IAqBAP;MACAM,OADA,mBACAC,GADA,EACA;QACA;MACA;IAHA;EArBA;AAzEA","names":["props","placeholder","type","default","labelName","label","reduce","options","required","data","selected","items","methods","changeValue","getOption","e","payload","console","getOptionLabel","option","JSON","watch","handler","bef","deep","value"],"sourceRoot":"src/components/fields","sources":["AppSelect.vue"],"sourcesContent":["<template>\n  <div>\n    <vueSelect\n      v-model=\"selected\"\n      class=\"vue-select1 default__select\"\n      name=\"select1\"\n      :placeholder=\"placeholder\"\n      :options=\"items\"\n      :reduce=\"reduce\"\n      @input=\"$emit('input', selected)\"\n    >\n    </vueSelect>\n  </div>\n</template>\n<script>\nimport _ from \"lodash\";\nexport default {\n  props: {\n    placeholder: {\n      type: String,\n      default: \"\",\n    },\n    labelName: {\n      type: String,\n      default: \"label\",\n    },\n\n    label: {\n      type: String,\n      default: \"\",\n    },\n    reduce: {\n      type: Function,\n      default: (option) => option,\n    },\n\n    options: {\n      type: [Array, Object],\n      required: false,\n      default() {\n        return [];\n      },\n    },\n  },\n\n  data() {\n    return {\n      selected: \"\",\n      items: this.options,\n    };\n  },\n  methods: {\n    changeValue() {\n      this.$emit(\"input\", this.selected);\n      this.$emit(\n        \"change\",\n        this.items.find((item) => item[this.reduseKey] === this.selected)\n      );\n    },\n    async getOption(e) {\n      this.load = true;\n      let payload;\n      if (e) {\n        payload = e;\n      }\n      try {\n        let { data } = await this.$store.dispatch(this.action, payload);\n        this.items = data;\n      } catch (e) {\n        console.log(e);\n      } finally {\n        this.load = false;\n      }\n    },\ngetOptionLabel(option) {\n      console.log(1)\n      if (typeof option === \"object\") {\n        if (!option.hasOwnProperty(this.labelName)) {\n          return console.warn(\n            `[vue-select warn]: Label key \"option.${this.labelName}\" does not` +\n              ` exist in options object ${JSON.stringify(option)}.\\n` +\n              \"http://sagalbot.github.io/vue-select/#ex-labels\"\n          );\n        }\n        return option[this.labelName];\n      }\n      return option;\n    },\n  },\n  watch: {\n    options: {\n      handler(bef) {\n        if (!this.searchable) {\n          this.items = bef;\n        }\n      },\n      deep: true,\n    },\n    value: {\n      handler(bef) {\n        this.selected = bef;\n        this.isActive = true;\n      },\n      deep: true,\n    },\n    selected: {\n      handler(bef) {\n        this.changeValue();\n      },\n    },\n    payload: {\n      handler(bef) {\n        this.getOption(bef);\n      },\n    },\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}