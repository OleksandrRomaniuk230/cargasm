{"ast":null,"code":"import _typeof from \"/home/its/project/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _regeneratorRuntime from \"/home/its/project/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/its/project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport _ from \"lodash\";\nexport default {\n  props: {\n    labelText: String,\n    id: {\n      type: String,\n      default: \"input-\".concat(new Date().getTime())\n    },\n    reduseKey: {\n      type: String,\n      default: \"id\",\n      required: false\n    },\n    textInfo: {\n      type: String,\n      default: \"\"\n    },\n    value: {\n      type: [Number, String, Array, Boolean, Object],\n      default: null\n    },\n    state: {\n      type: Boolean,\n      default: false\n    },\n    e: {\n      type: String,\n      default: \"\"\n    },\n    placeholder: {\n      type: String,\n      default: \"\"\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    clearable: {\n      type: Boolean,\n      default: true\n    },\n    maxHeight: {\n      type: String,\n      default: \"400px\"\n    },\n    searchable: {\n      type: Boolean,\n      default: true\n    },\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    clearSearchOnSelect: {\n      type: Boolean,\n      default: true\n    },\n    closeOnSelect: {\n      type: Boolean,\n      default: true\n    },\n    labelName: {\n      type: String,\n      default: \"label\"\n    },\n    customClass: {\n      type: String,\n      default: \"actions-select\"\n    },\n    label: {\n      type: String,\n      default: \"\"\n    },\n    reduce: {\n      type: Function,\n      default: function _default(option) {\n        return option;\n      }\n    },\n    createOption: {\n      type: Function,\n      default: function _default(items) {\n        return items;\n      }\n    },\n    options: {\n      type: [Array, Object],\n      required: false,\n      default: function _default() {\n        return [];\n      }\n    },\n    action: {\n      type: String,\n      default: \"\"\n    },\n    actionVuex: {\n      type: String,\n      default: \"\"\n    },\n    mask: {\n      type: [String, Object, Array],\n      default: \"\"\n    },\n    selectOptions: {\n      type: String,\n      default: \"\"\n    },\n    selectProduct: {\n      type: Boolean,\n      default: false\n    },\n    taggable: {\n      type: Boolean,\n      default: false\n    },\n    inputName: {\n      type: String,\n      default: \"\"\n    },\n    autocomplite: {\n      type: Boolean,\n      default: false\n    },\n    payload: {\n      type: [Number, String, Array, Object],\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      selected: this.value,\n      items: this.options,\n      noOptionsMessage: \"Для выбора параметров введите несколько букв...\"\n    };\n  },\n  methods: {\n    changeValue: function changeValue() {\n      var _this = this;\n\n      this.$emit(\"input\", this.selected);\n      this.$emit(\"change\", this.items.find(function (item) {\n        return item[_this.reduseKey] === _this.selected;\n      }));\n    },\n    onSearch: function onSearch(search) {\n      if (this.action !== \"\" && this.autocomplite) {\n        this.search(search, this);\n      }\n    },\n    search: _.debounce( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(search, vm) {\n        var payload, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                vm.$emit(\"search:val\", search);\n                payload = {\n                  q: search\n                };\n\n                if (vm.filters) {\n                  payload = {\n                    q: search,\n                    f: vm.filters\n                  };\n                }\n\n                _context.prev = 3;\n                _context.next = 6;\n                return vm.$store.dispatch(vm.action, {\n                  q: search,\n                  parent_id: vm.payload ? vm.payload.parent_id : \"\"\n                });\n\n              case 6:\n                response = _context.sent;\n                vm.items = response.data;\n\n                if (search) {\n                  vm.noOptionsMessage = \"ничего не найдено\";\n                } else {\n                  vm.noOptionsMessage = \"Для выбора параметров введите несколько букв...\";\n                }\n\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](3);\n                console.log(_context.t0);\n\n              case 14:\n                _context.prev = 14;\n                return _context.finish(14);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[3, 11, 14, 16]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }(), 350),\n    getOptionLabel: function getOptionLabel(option) {\n      if (_typeof(option) === \"object\") {\n        if (!option.hasOwnProperty(this.labelName)) {\n          return console.warn(\"[vue-select warn]: Label key \\\"option.\".concat(this.labelName, \"\\\" does not\") + \" exist in options object \".concat(JSON.stringify(option), \".\\n\") + \"http://sagalbot.github.io/vue-select/#ex-labels\");\n        }\n\n        return option[this.labelName];\n      }\n\n      return option;\n    }\n  },\n  watch: {\n    options: {\n      handler: function handler(bef) {\n        if (!this.searchable) {\n          this.items = bef;\n        }\n      },\n      deep: true\n    },\n    value: {\n      handler: function handler(bef) {\n        this.selected = bef;\n        this.isActive = true;\n      },\n      deep: true\n    },\n    selected: {\n      handler: function handler(bef) {\n        this.changeValue();\n      }\n    },\n    payload: {\n      handler: function handler(bef) {\n        this.getOption(bef);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA;AACA;EACAA;IACAC,iBADA;IAEAC;MACAC,YADA;MAEAC;IAFA,CAFA;IAMAC;MACAF,YADA;MAEAC,aAFA;MAGAE;IAHA,CANA;IAWAC;MACAJ,YADA;MAEAC;IAFA,CAXA;IAeAI;MACAL,8CADA;MAEAC;IAFA,CAfA;IAmBAK;MACAN,aADA;MAEAC;IAFA,CAnBA;IAuBAM;MACAP,YADA;MAEAC;IAFA,CAvBA;IA2BAO;MACAR,YADA;MAEAC;IAFA,CA3BA;IA+BAQ;MACAT,aADA;MAEAC;IAFA,CA/BA;IAmCAS;MACAV,aADA;MAEAC;IAFA,CAnCA;IAuCAU;MACAX,YADA;MAEAC;IAFA,CAvCA;IA2CAW;MACAZ,aADA;MAEAC;IAFA,CA3CA;IA+CAY;MACAb,aADA;MAEAC;IAFA,CA/CA;IAmDAa;MACAd,aADA;MAEAC;IAFA,CAnDA;IAuDAc;MACAf,aADA;MAEAC;IAFA,CAvDA;IA2DAe;MACAhB,YADA;MAEAC;IAFA,CA3DA;IA+DAgB;MACAjB,YADA;MAEAC;IAFA,CA/DA;IAmEAiB;MACAlB,YADA;MAEAC;IAFA,CAnEA;IAuEAkB;MACAnB,cADA;MAEAC;QAAA;MAAA;IAFA,CAvEA;IA2EAmB;MACApB,cADA;MAEAC;QAAA;MAAA;IAFA,CA3EA;IA+EAoB;MACArB,qBADA;MAEAG,eAFA;MAGAF,OAHA,sBAGA;QACA;MACA;IALA,CA/EA;IAsFAqB;MACAtB,YADA;MAEAC;IAFA,CAtFA;IA0FAsB;MACAvB,YADA;MAEAC;IAFA,CA1FA;IA8FAuB;MACAxB,6BADA;MAEAC;IAFA,CA9FA;IAkGAwB;MACAzB,YADA;MAEAC;IAFA,CAlGA;IAsGAyB;MACA1B,aADA;MAEAC;IAFA,CAtGA;IA0GA0B;MACA3B,aADA;MAEAC;IAFA,CA1GA;IA8GA2B;MACA5B,YADA;MAEAC;IAFA,CA9GA;IAkHA4B;MACA7B,aADA;MAEAC;IAFA,CAlHA;IAsHA6B;MACA9B,qCADA;MAEAC;IAFA;EAtHA,CADA;EA4HA8B,IA5HA,kBA4HA;IACA;MACAC,oBADA;MAGAC,mBAHA;MAIAC;IAJA;EAMA,CAnIA;EAoIAC;IACAC,WADA,yBACA;MAAA;;MACA;MACA,WACA,QADA,EAEA;QAAA;MAAA,EAFA;IAIA,CAPA;IAQAC,QARA,oBAQAC,MARA,EAQA;MACA;QAEA;MACA;IACA,CAbA;IAcAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACAC;gBACAT,OAFA,GAEA;kBAAAU;gBAAA,CAFA;;gBAGA;kBACAV;oBAAAU;oBAAAC;kBAAA;gBACA;;gBALA;gBAAA;gBAAA,OAOAF;kBACAC,SADA;kBAEAE;gBAFA,EAPA;;cAAA;gBAOAC,QAPA;gBAWAJ;;gBACA;kBACAA;gBACA,CAFA,MAEA;kBACAA,sBACA,iDADA;gBAEA;;gBAjBA;gBAAA;;cAAA;gBAAA;gBAAA;gBAmBAK;;cAnBA;gBAAA;gBAAA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;IAAA,KAuBA,GAvBA,CAdA;IAsCAC,cAtCA,0BAsCAC,MAtCA,EAsCA;MACA;QACA;UACA,oBACA,oHACAC,sBADA,WAEA,iDAHA;QAKA;;QACA;MACA;;MACA;IACA;EAlDA,CApIA;EAwLAC;IACA3B;MACA4B,OADA,mBACAC,GADA,EACA;QACA;UACA;QACA;MACA,CALA;MAMAC;IANA,CADA;IASA9C;MACA4C,OADA,mBACAC,GADA,EACA;QACA;QACA;MACA,CAJA;MAKAC;IALA,CATA;IAgBAnB;MACAiB,OADA,mBACAC,GADA,EACA;QACA;MACA;IAHA,CAhBA;IAqBApB;MACAmB,OADA,mBACAC,GADA,EACA;QACA;MACA;IAHA;EArBA;AAxLA","names":["props","labelText","id","type","default","reduseKey","required","textInfo","value","state","e","placeholder","disabled","clearable","maxHeight","searchable","multiple","clearSearchOnSelect","closeOnSelect","labelName","customClass","label","reduce","createOption","options","action","actionVuex","mask","selectOptions","selectProduct","taggable","inputName","autocomplite","payload","data","selected","items","noOptionsMessage","methods","changeValue","onSearch","search","vm","q","f","parent_id","response","console","getOptionLabel","option","JSON","watch","handler","bef","deep"],"sourceRoot":"src/components/fields","sources":["AppSelect.vue"],"sourcesContent":["<template>\n    <div class=\"input-wrapper\">\n      <div  >\n        <label v-if=\"label\">{{ label }}</label>\n        <label\n          style=\"z-index: 1;\"\n          class=\"form-group__label\"\n          v-if=\"labelText\"\n          :class=\"{ active: isActive }\"\n          >{{ labelText }}</label\n        >\n        <vueSelect\n          @focus=\"isActive = true\"\n          v-model=\"selected\"\n          :label=\"id\"\n          :placeholder=\"placeholder\"\n          :disabled=\"disabled\"\n          :clearable=\"clearable\"\n          :max-height=\"maxHeight\"\n          :searchable=\"searchable\"\n          :taggable=\"taggable\"\n          :multiple=\"multiple\"\n          :clear-search-on-select=\"clearSearchOnSelect\"\n          :close-on-select=\"closeOnSelect\"\n          :get-option-label=\"getOptionLabel\"\n          :options=\"items\"\n          :reduce=\"reduce\"\n          @input=\"changeValue\"\n          @search=\"onSearch\"\n          :class=\"customClass\"\n        >\n          <template v-slot:selected-option=\"option\">\n            <div class=\"authors-select\">\n              <!-- <img :src=\"main_photo.min_avatar\" alt />\n              {{ name }} {{surname ? surname : ''}}-->\n              <img\n                :src=\"option.main_photo.min_avatar\"\n                v-if=\"option.main_photo\"\n              />\n              {{ option[labelName] }}\n              {{ option.surname ? option.surname : \"\" }}\n            </div>\n          </template>\n\n          <template slot=\"no-options\">{{ noOptionsMessage }}</template>\n        </vueSelect>\n      </div>\n      <div class=\"input-wrapper__right\" v-if=\"textInfo\">\n        <p class=\"gray-text\">{{ textInfo }}</p>\n      </div>\n    </div>\n\n</template>\n\n<script>\nimport _ from \"lodash\";\nexport default {\n  props: {\n    labelText: String,\n    id: {\n      type: String,\n      default: `input-${new Date().getTime()}`\n    },\n    reduseKey: {\n      type: String,\n      default: \"id\",\n      required: false\n    },\n    textInfo: {\n      type: String,\n      default: \"\"\n    },\n    value: {\n      type: [Number, String, Array, Boolean, Object],\n      default: null\n    },\n    state: {\n      type: Boolean,\n      default: false\n    },\n    e: {\n      type: String,\n      default: \"\"\n    },\n    placeholder: {\n      type: String,\n      default: \"\"\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    clearable: {\n      type: Boolean,\n      default: true\n    },\n    maxHeight: {\n      type: String,\n      default: \"400px\"\n    },\n    searchable: {\n      type: Boolean,\n      default: true\n    },\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    clearSearchOnSelect: {\n      type: Boolean,\n      default: true\n    },\n    closeOnSelect: {\n      type: Boolean,\n      default: true\n    },\n    labelName: {\n      type: String,\n      default: \"label\"\n    },\n    customClass: {\n      type: String,\n      default: \"actions-select\"\n    },\n    label: {\n      type: String,\n      default: \"\"\n    },\n    reduce: {\n      type: Function,\n      default: option => option\n    },\n    createOption: {\n      type: Function,\n      default: items => items\n    },\n    options: {\n      type: [Array, Object],\n      required: false,\n      default() {\n        return [];\n      }\n    },\n    action: {\n      type: String,\n      default: \"\"\n    },\n    actionVuex: {\n      type: String,\n      default: \"\"\n    },\n    mask: {\n      type: [String, Object, Array],\n      default: \"\"\n    },\n    selectOptions: {\n      type: String,\n      default: \"\"\n    },\n    selectProduct: {\n      type: Boolean,\n      default: false\n    },\n    taggable: {\n      type: Boolean,\n      default: false\n    },\n    inputName: {\n      type: String,\n      default: \"\"\n    },\n    autocomplite: {\n      type: Boolean,\n      default: false\n    },\n    payload: {\n      type: [Number, String, Array, Object],\n      default: null\n    }\n  },\n  data() {\n    return {\n      selected: this.value,\n\n      items: this.options,\n      noOptionsMessage: \"Для выбора параметров введите несколько букв...\"\n    };\n  },\n  methods: {\n    changeValue() {\n      this.$emit(\"input\", this.selected);\n      this.$emit(\n        \"change\",\n        this.items.find(item => item[this.reduseKey] === this.selected)\n      );\n    },\n    onSearch(search) {\n      if (this.action !== \"\" && this.autocomplite) {\n       \n        this.search( search, this);\n      }\n    },\n    search: _.debounce(async ( search, vm) => {\n      vm.$emit(\"search:val\", search);\n      let payload = { q: search };\n      if (vm.filters) {\n        payload = { q: search, f: vm.filters };\n      }\n      try {\n        let response = await vm.$store.dispatch(vm.action, {\n          q: search,\n          parent_id: vm.payload ? vm.payload.parent_id : \"\"\n        });\n        vm.items = response.data;\n        if (search) {\n          vm.noOptionsMessage = \"ничего не найдено\";\n        } else {\n          vm.noOptionsMessage =\n            \"Для выбора параметров введите несколько букв...\";\n        }\n      } catch (e) {\n        console.log(e);\n      } finally {\n     \n      }\n    }, 350),\n    getOptionLabel(option) {\n      if (typeof option === \"object\") {\n        if (!option.hasOwnProperty(this.labelName)) {\n          return console.warn(\n            `[vue-select warn]: Label key \"option.${this.labelName}\" does not` +\n              ` exist in options object ${JSON.stringify(option)}.\\n` +\n              \"http://sagalbot.github.io/vue-select/#ex-labels\"\n          );\n        }\n        return option[this.labelName];\n      }\n      return option;\n    }\n  },\n  watch: {\n    options: {\n      handler(bef) {\n        if (!this.searchable) {\n          this.items = bef;\n        }\n      },\n      deep: true\n    },\n    value: {\n      handler(bef) {\n        this.selected = bef;\n        this.isActive = true;\n      },\n      deep: true\n    },\n    selected: {\n      handler(bef) {\n        this.changeValue();\n      }\n    },\n    payload: {\n      handler(bef) {\n        this.getOption(bef);\n      }\n    }\n  }\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}