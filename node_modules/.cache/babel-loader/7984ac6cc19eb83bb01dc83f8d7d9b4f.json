{"ast":null,"code":"import _typeof from \"/home/its/project/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport _ from \"lodash\";\nexport default {\n  props: {\n    placeholder: {\n      type: String,\n      default: \"\"\n    },\n    labelName: {\n      type: String,\n      default: \"label\"\n    },\n    label: {\n      type: String,\n      default: \"\"\n    },\n    reduce: {\n      type: Function,\n      default: function _default(option) {\n        return option;\n      }\n    },\n    options: {\n      type: [Array, Object],\n      required: false,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      selected: \"\",\n      items: this.options\n    };\n  },\n  methods: {\n    changeValue: function changeValue() {\n      var _this = this;\n\n      this.$emit(\"input\", this.selected);\n      this.$emit(\"change\", this.items.find(function (item) {\n        return item[_this.reduseKey] === _this.selected;\n      }));\n    },\n    getOptionLabel: function getOptionLabel(option) {\n      console.log(1);\n\n      if (_typeof(option) === \"object\") {\n        if (!option.hasOwnProperty(this.labelName)) {\n          return console.warn(\"[vue-select warn]: Label key \\\"option.\".concat(this.labelName, \"\\\" does not\") + \" exist in options object \".concat(JSON.stringify(option), \".\\n\") + \"http://sagalbot.github.io/vue-select/#ex-labels\");\n        }\n\n        return option[this.labelName];\n      }\n\n      return option;\n    }\n  },\n  watch: {\n    options: {\n      handler: function handler(bef) {\n        if (!this.searchable) {\n          this.items = bef;\n        }\n      },\n      deep: true\n    },\n    value: {\n      handler: function handler(bef) {\n        this.selected = bef;\n        this.isActive = true;\n      },\n      deep: true\n    },\n    selected: {\n      handler: function handler(bef) {\n        this.changeValue();\n      }\n    },\n    payload: {\n      handler: function handler(bef) {\n        this.getOption(bef);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAeA;AACA;EACAA;IACAC;MACAC,YADA;MAEAC;IAFA,CADA;IAKAC;MACAF,YADA;MAEAC;IAFA,CALA;IAUAE;MACAH,YADA;MAEAC;IAFA,CAVA;IAcAG;MACAJ,cADA;MAEAC;QAAA;MAAA;IAFA,CAdA;IAmBAI;MACAL,qBADA;MAEAM,eAFA;MAGAL,OAHA,sBAGA;QACA;MACA;IALA;EAnBA,CADA;EA6BAM,IA7BA,kBA6BA;IACA;MACAC,YADA;MAEAC;IAFA;EAIA,CAlCA;EAmCAC;IACAC,WADA,yBACA;MAAA;;MACA;MACA,WACA,QADA,EAEA;QAAA;MAAA,EAFA;IAIA,CAPA;IASAC,cATA,0BASAC,MATA,EASA;MACAC;;MACA;QACA;UACA,oBACA,oHACAC,sBADA,WAEA,iDAHA;QAKA;;QACA;MACA;;MACA;IACA;EAtBA,CAnCA;EA2DAC;IACAX;MACAY,OADA,mBACAC,GADA,EACA;QACA;UACA;QACA;MACA,CALA;MAMAC;IANA,CADA;IASAC;MACAH,OADA,mBACAC,GADA,EACA;QACA;QACA;MACA,CAJA;MAKAC;IALA,CATA;IAgBAX;MACAS,OADA,mBACAC,GADA,EACA;QACA;MACA;IAHA,CAhBA;IAqBAG;MACAJ,OADA,mBACAC,GADA,EACA;QACA;MACA;IAHA;EArBA;AA3DA","names":["props","placeholder","type","default","labelName","label","reduce","options","required","data","selected","items","methods","changeValue","getOptionLabel","option","console","JSON","watch","handler","bef","deep","value","payload"],"sourceRoot":"src/components/fields","sources":["AppSelect.vue"],"sourcesContent":["<template>\n  <div>\n    <vueSelect\n      v-model=\"selected\"\n      class=\"vue-select1 default__select\"\n      name=\"select1\"\n      :placeholder=\"placeholder\"\n      :options=\"items\"\n      :reduce=\"reduce\"\n      @input=\"$emit('input', selected)\"\n    >\n    </vueSelect>\n  </div>\n</template>\n<script>\nimport _ from \"lodash\";\nexport default {\n  props: {\n    placeholder: {\n      type: String,\n      default: \"\",\n    },\n    labelName: {\n      type: String,\n      default: \"label\",\n    },\n\n    label: {\n      type: String,\n      default: \"\",\n    },\n    reduce: {\n      type: Function,\n      default: (option) => option,\n    },\n\n    options: {\n      type: [Array, Object],\n      required: false,\n      default() {\n        return [];\n      },\n    },\n  },\n\n  data() {\n    return {\n      selected: \"\",\n      items: this.options,\n    };\n  },\n  methods: {\n    changeValue() {\n      this.$emit(\"input\", this.selected);\n      this.$emit(\n        \"change\",\n        this.items.find((item) => item[this.reduseKey] === this.selected)\n      );\n    },\n\ngetOptionLabel(option) {\n      console.log(1)\n      if (typeof option === \"object\") {\n        if (!option.hasOwnProperty(this.labelName)) {\n          return console.warn(\n            `[vue-select warn]: Label key \"option.${this.labelName}\" does not` +\n              ` exist in options object ${JSON.stringify(option)}.\\n` +\n              \"http://sagalbot.github.io/vue-select/#ex-labels\"\n          );\n        }\n        return option[this.labelName];\n      }\n      return option;\n    },\n  },\n  watch: {\n    options: {\n      handler(bef) {\n        if (!this.searchable) {\n          this.items = bef;\n        }\n      },\n      deep: true,\n    },\n    value: {\n      handler(bef) {\n        this.selected = bef;\n        this.isActive = true;\n      },\n      deep: true,\n    },\n    selected: {\n      handler(bef) {\n        this.changeValue();\n      },\n    },\n    payload: {\n      handler(bef) {\n        this.getOption(bef);\n      },\n    },\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}