{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: {\n    value: {\n      type: [Object, String],\n      default: function _default() {\n        return {};\n      }\n    },\n    placeholder: {\n      type: String,\n      default: \"\"\n    },\n    label: {\n      type: String,\n      default: \"\"\n    },\n    inputName: {\n      type: String,\n      default: \"\"\n    },\n    labelName: {\n      type: String,\n      default: \"name\"\n    },\n    options: {\n      type: [Array, Object],\n      required: false,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      selected: \"\"\n    };\n  },\n  methods: {\n    /*     getOptionLabel(option) {\n          if (typeof option === \"object\") {\n            if (!option.hasOwnProperty(this.labelName)) {\n              return console.warn(\n                `[vue-select warn]: Label key \"option.${this.labelName}\" does not` +\n                  ` exist in options object ${JSON.stringify(option)}.\\n` +\n                  \"http://sagalbot.github.io/vue-select/#ex-labels\"\n              );\n            }\n            return option[this.labelName];\n          }\n          return option;\n        }, */\n    changeValue: function changeValue(e) {\n      console.log(e);\n\n      if (e.name) {} //this.$emit('input', $event.key||$event.value)\n\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;AAYA;EACAA;IACAC;MACAC,sBADA;MAEAC;QACA;MACA;IAJA,CADA;IAQAC;MACAF,YADA;MAEAC;IAFA,CARA;IAYAE;MACAH,YADA;MAEAC;IAFA,CAZA;IAgBAG;MACAJ,YADA;MAEAC;IAFA,CAhBA;IAoBAI;MACAL,YADA;MAEAC;IAFA,CApBA;IAyBAK;MACAN,qBADA;MAEAO,eAFA;MAGAN,OAHA,sBAGA;QACA;MACA;IALA;EAzBA,CADA;EAmCAO,IAnCA,kBAmCA;IACA;MACAC;IADA;EAGA,CAvCA;EAwCAC;IACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACAC,WAdA,uBAcAC,CAdA,EAcA;MACAC;;MACA,cAFA,CAGA;;IACA;EAlBA;AAxCA","names":["props","value","type","default","placeholder","label","inputName","labelName","options","required","data","selected","methods","changeValue","e","console"],"sourceRoot":"src/components/fields","sources":["AppSelect.vue"],"sourcesContent":["<template>\n  <div>\n    <vueSelect\n    @input=\"changeValue\"\n    :options=\"options\"\n    :label=\"labelName\"\n    :placeholder=\"placeholder\"\n    >\n    </vueSelect>\n  </div>\n</template>\n<script>\nexport default {\n  props: {\n    value: {\n      type:[Object,String], \n      default: () => {\n        return {}\n      }\n\n    },\n    placeholder: {\n      type: String,\n      default: \"\",\n    },\n    label: {\n      type: String,\n      default: \"\",\n    },\n    inputName: {\n      type: String,\n      default: \"\",\n    },\n    labelName: {\n      type: String,\n      default: \"name\",\n    },\n\n    options: {\n      type: [Array, Object],\n      required: false,\n      default() {\n        return [];\n      },\n    },\n  },\n\n  data() {\n    return {\n      selected: \"\",\n    };\n  },\n  methods: {\n/*     getOptionLabel(option) {\n      if (typeof option === \"object\") {\n        if (!option.hasOwnProperty(this.labelName)) {\n          return console.warn(\n            `[vue-select warn]: Label key \"option.${this.labelName}\" does not` +\n              ` exist in options object ${JSON.stringify(option)}.\\n` +\n              \"http://sagalbot.github.io/vue-select/#ex-labels\"\n          );\n        }\n        return option[this.labelName];\n      }\n      return option;\n    }, */\n    changeValue(e){\n      console.log(e)\n      if(e.name){}\n    //this.$emit('input', $event.key||$event.value)\n    }\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}